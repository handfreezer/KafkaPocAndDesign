x-kfk-img: &ptrKfkImg
  image: ${IMG_KFK:?error}

x-kfk-brk-cmn: &ptrKfkBrkCmn
  <<: *ptrKfkImg
  command: kraft
  ports:
    - "9092"
  networks:
    - netKfk
  healthcheck:
    test: "bash -c 'printf \"\" > /dev/tcp/127.0.0.1/9092; exit $$?;'"
    interval: 10s
    timeout: 10s
    retries: 2
    start_period: 40s
  restart: unless-stopped

x-kfk-cnt-cmn: &ptrKfkCntCmn
  <<: *ptrKfkImg
  command: connect
  networks:
    - netKfk
  volumes:
    - ./datas-poc/connect:/kafka/connect
    - ./datas-poc/libs:/kafka/libs
  depends_on:
    kfkbrkdst-00:
      condition: service_healthy
    kfkbrkdst-01:
      condition: service_healthy
  healthcheck:
    test: "bash -c 'printf \"\" > /dev/tcp/127.0.0.1/8083; exit $$?;'"
    interval: 10s
    timeout: 10s
    retries: 2
    start_period: 40s
  restart: unless-stopped
  environment:
    KAFKA_HEAP_OPTS: "-Xms256M -Xmx256m"

services:
  kfkbrksrc-00:
    hostname: kfkbrksrc-00
    <<: *ptrKfkBrkCmn
    env_file:
      - path: ./datas-poc/kfkBrkSrc.env
        required: true
      - path: ./datas-poc/kfkBrkSrc00.env
        required: true
    volumes:
      - ./datas-poc/kfk/brk/src/00:/kafka/kraft
      - ./datas-poc/libs:/kafka/libs
      - ./datas-poc/acls:/kafka/acls

  kfkbrksrc-01:
    hostname: kfkbrksrc-01
    <<: *ptrKfkBrkCmn
    env_file:
      - path: ./datas-poc/kfkBrkSrc.env
        required: true
      - path: ./datas-poc/kfkBrkSrc01.env
        required: true
    volumes:
      - ./datas-poc/kfk/brk/src/01:/kafka/kraft
      - ./datas-poc/libs:/kafka/libs

  kfkbrkdst-00:
    hostname: kfkbrkdst-00
    <<: *ptrKfkBrkCmn
    env_file:
      - path: ./datas-poc/kfkBrkDst.env
        required: true
      - path: ./datas-poc/kfkBrkDst00.env
        required: true
    volumes:
      - ./datas-poc/kfk/brk/dst/00:/kafka/kraft
      - ./datas-poc/libs:/kafka/libs

  kfkbrkdst-01:
    hostname: kfkbrkdst-01
    <<: *ptrKfkBrkCmn
    env_file:
      - path: ./datas-poc/kfkBrkDst.env
        required: true
      - path: ./datas-poc/kfkBrkDst01.env
        required: true
    volumes:
      - ./datas-poc/kfk/brk/dst/01:/kafka/kraft
      - ./datas-poc/libs:/kafka/libs

  kfkcnt-00:
    <<: *ptrKfkCntCmn
    hostname: srvcnt00
    ports:
      - '8083:8083'

  kfkcnt-01:
    <<: *ptrKfkCntCmn
    hostname: srccnt01

  kafka-ui:
    image: provectuslabs/kafka-ui:master
    volumes:
      - ./datas-poc/ui/config.yml:/etc/kafkaui/dynamic_config.yaml
      - ./datas-poc/ui/jks:/etc/kafkaui/jks
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - netKfk
    ports:
      - '8080:8080'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider localhost:8080 || exit 1
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 60s

  akhq:
    profiles:
      - do_not_start
    image: tchiotludo/akhq
    volumes:
      - ./datas-poc/akhq/application.yml:/app/application.yml
    networks:
      - netKfk
    ports:
      - '8081:8080'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider localhost:8080 || exit 1
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 60s


networks:
  netKfk:

